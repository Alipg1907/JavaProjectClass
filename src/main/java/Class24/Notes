Collections Framework:
    It's a collection of classes and interfaces which help us build dynamic
    programs which are capable of handling large amounts of data.
Why should we learn about Collections Framework?
    Arrays are not good and we need something that is dynamic and more
    flexible for example:
    1)They are fixed in size.
    2)No ready made methods we have to create our own.

Arraylist:
    Better version of Arrays. It is also index based. It is dynamic we
    don't need to provide the size before hand and it contains a lot of methods
    to manipulate the data inside it.

Syntax:
    For Array we used this syntax  DataType nameForArray = new DataType [Size]
    String [] arr = new String [5];
    ArrayList<DataType> nameForArrayList=new ArrayList<>();
    ArrayList<String> arrayList=new ArrayList<>();

Methods FromArrayList:
    Size()=>No of elements.
    add(Element)=> adds new element to the arrayList
    get(Index) => Returns the element on specified index.
    remove(index) => removes the element on the specified index
    remove(Element) => Removes the element from the arraylist
    indexOf(element) => Returns the index of the element
    Contains(Element) => returns true if element is present

Wrapper Classes:
    They are special classes designed for primitive DataTypes.
    For every primitive DataType we have a class these classes are called
    wrapper classes.
    byte = >Byte
    short => Short
    int => Integer
    long => Long
    float => Float
    double => Double
    char => Character
    boolean => Boolean

Why wrapper Classes?
    1) Because primitives are not supported by colletions framework.
    2) Aclass can have methods inside it which is not possible for primitive

